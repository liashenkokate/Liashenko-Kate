//10.1
#include <stdio.h>
#include <stdlib.h>

struct Date {
	unsigned day;
	unsigned month;
	int year;
};

int inputDate(struct Date* dd) {
	printf("\nDay:");
	scanf_s(" %u", &(dd->day));
	printf("\nMonth:");
	scanf_s(" %u", &(dd->month));
	printf("Year:");
	scanf_s(" %d", &(dd->year));
	return 0;
}

void outputDate(struct Date dd) {
	printf("%u.%u.%d", dd.day, dd.month, dd.year);
}

struct ChessField {
	char hor;
	unsigned char ver;
};

int inputChess (struct ChessField* cf) {
	printf("\nH:");
	scanf_s(" %c", &(cf->hor));
	printf("V:");
	scanf_s(" %hhu", &(cf->ver));

	if ((cf->ver) > 8 || (cf->ver) == 0) return 1;
	if ((cf->hor) < 'a' || (cf->hor) > 'h') return 2;
	return 0;
}

void oututChess(struct ChessField cf) {
	printf("%c%hhu", cf.hor, cf.ver);
}


typedef struct {
	float x, y;
} Vertex;


typedef struct {
	Vertex A;
	Vertex B;
}Rectangle;

int inputRect(Rectangle* r) {
	printf("A(x,y):");
	scanf_s("%f %f", &(r->A.x), &(r->A.y));
	printf("B(x,y):");
	scanf_s("%f %f", &(r->B.x), &(r->B.y));
	return 0;
}

void outputRect(const Rectangle r) {
	printf("A(%f, %f) - B(%f, %f)", r.A.x, r.A.y, r.B.x, r.B.y);
}



//10.2
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

struct ChessField {
	char hor; //a
	unsigned char ver; //1
};

bool inputChess(struct ChessField* cf) {
	printf("\nHorizontally:");
	scanf_s(" %c", &(cf->hor));
	printf("Vertically:");
	scanf_s(" %hhu", &(cf->ver));

	if ((cf->ver) > 8 || (cf->ver) == 0) return false;
	if ((cf->hor) < 'a' || (cf->hor) > 'h') return false;
	return true;
}


bool ability(struct ChessField w1, struct ChessField w2) {

	if (abs(w1.hor - w2.hor) == abs(w1.ver - w2.ver) || abs(w1.hor - w2.hor) == 0 || abs(w1.ver - w2.ver) == 0) return true;
	else return false;
}


int main() {

	bool a;

	struct ChessField w1, w2;
	if (inputChess(&w1) && inputChess(&w2)) {
		a = ability(w1, w2);
	}
	else printf("Wrong input");

	printf("\nAbility to go from %c%hhu to %c%hhu is: %d", w1.hor, w1.ver, w2.hor, w2.ver, a);

}



//10.3

#include <stdio.h>

typedef struct{
    int day;
    int month;
    int year;
} Date;

int checkDate(const Date* x){
    int mas[12]={31,28,31,30,31,30,31,31,30,31,30,31};

    if(x->year<1900 || x->year>2200) return -1;
    if(x->month<1 || x->month>12) return -2;
    if(x->day<=0 || x->day>mas[x->month-1]) return -3;
    return 0;
}

int input(Date* x){
    scanf("%d",&x->day);
    scanf("%d",&x->month);
    scanf("%d",&x->year);
    return 0;
}

void vyvod(const Date x){
    printf("\nDate = %2d.%2d.%4d",x.day,x.month,x.year);
}

int leapYear(int year){
    return(year%4==0)&&(year%200!=0);
}

Date yesterday(const Date x){
    int dayMonth[12]={31,28,31,30,31,30,31,31,30,31,30,31};

    Date res = x;
    if(x.day>1){
        res.day--;
        return res;
    }

    if(x.month>1){
        res.month--;
        res.day = dayMonth[res.month-1];
        if(leapYear(x.year) && res.month==2) res.day=29;
        return res;
    }

    if(x.month==1){
        res.year--;
        res.month=12;
        res.day=31;
        return res;
    }
    fprintf(stderr,"Chet ne to");
    return res;
}

Date tomorrow(const Date* x){
    int dayMonth[12]={31,28,31,30,31,30,31,31,30,31,30,31};
    Date res = *x;
    if(res.day<dayMonth[x->month] + leapYear(x->year)){
        res.day++;
        return res;
    }

    if(x->month<12){
        res.month++;
        res.day = 1;
    }

    if(x->month==12){
        res.year++;
        res.month = 1;
        res.day = 1;
        return res;
    }

    fprintf(stderr,"Chet ne to");
    return res;
}

int main(){
    Date dat1;
    int r=-1;
    do{
        printf("Input date: ");
        input(&dat1);
        if(checkDate(&dat1)==0) break;
    } while(1);

    vyvod(dat1);
    vyvod(yesterday(dat1));

    printf("\n");
    Date d1 = {30,3,2018};
    Date d2 = {28,2,2021};
    Date d3 = {31,12,2017};
    Date d4 = {28,2,2020};
    Date d5 = {28,2,2022};

    vyvod(yesterday(d1));
    vyvod(yesterday(d2));
    vyvod(yesterday(d3));
    vyvod(yesterday(d4));
    vyvod(yesterday(d5));
    printf("\n------------");
    vyvod(tomorrow(&d1));
    vyvod(tomorrow(&d2));
    vyvod(tomorrow(&d3));
    vyvod(tomorrow(&d4));
    vyvod(tomorrow(&d5));
}
